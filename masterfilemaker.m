%masterfilemaker.m: makes all bg, rw, and rc files for each run

%{
 CAUTION: This script will potentially make a lot of files. Be prepared to store all
 files. 
 
READ ME:

There are three sections in this script. The first section will make all of the blade
geometry (bg) files. The second section makes all of the rw files, and the last makes the
master run files (I like to call run condition files, or rc files). 

First, you need to know how many files you need. If completing a study with 2 changing
variables, I suggest to make an excel sheet that goes:

| 11 | 12 | 13 | 14 | 1x |
| 21 | 22 | 23 | 24 | 2x |
| y1 | y2 | y3 | y4 | yx |

where x is the max number of columns, and y is the max number of rows. Input y and x at
the start of the file. 

After determinating the max rows and columns, you can begin altering different variables across 
 the three file types to complete your study. In this file, you will see that anhedral
 angle and blade spacing angle were altered. 

%}


clear all
clc

x = 13; %max number of columns (refer to read me)
y = 6; %max number of rows (refer to read me)


%make all of the bg files

fileprefix = "testbase"; %you can change this to any file prefix that you would like
bgfiletype = "bg";

%at the time of making this script, we analyzed changes in anhedral angle and blade offset
%angle.You can change this variable to be any of the variables that you'd like to
%investigate via CHARM
anhd = 0;  
for o = 1:x
    for z = 1:y
        %name of the bg files
        bgfilename = sprintf('%s%d%d%s.inp', fileprefix, z, o, bgfiletype);
        %we altered anhedral angle based off of row number, hence the switch going from
        %1-6. 
        switch z
            case 1
                anhd = 0;
            case 2
                anhd = 10;
            case 3
                anhd = 20;
            case 4
                anhd = 30;
            case 5
                anhd = 40;
            case 6
                anhd = 50;
        end
       fileID = fopen(bgfilename,'w');

       %This is the real heart of the bg file. Make sure you are satisfied with all of
       %these numbers before proceeding. You can change as necessary. 

       %Notice how under ANHD, there is a percent sign, followed by 2.1f. This is how you
       %indicate to matlab what variable you want to be changing. %2.1f means you will be
       %inputing a number with 1 decimal point. Refer to matlab help on fprintf for more info
       fprintf(fileID, ['basebg.inp CHARM Blade Geometry Input File made from basebg.dat\r\n', ...
        'KBGEOM\r\n', ...
        '  0\r\n', ...
        'NSEG\r\n', ...
        ' 8\r\n', ...
        'CUTOUT\r\n', ...
        '  0.0680    \r\n', ...
        'SL(ISEG)\r\n', ...
        '  .0417  .0417  .0417  .0417  .0417   .0417   .0833 .5000  .0313  .0104\r\n', ...
        'CHORD(ISEG)\r\n', ...
        '  .1200  .1172  .1145  .1354  .1458   .1563   .1771  .1667 .0833  .0729   .0213\r\n', ...
        'ELOFSG(ISEG) - (elastic axis offset)\r\n', ...
        '  9*0.0\r\n', ...
        'SWEEPD(ISEG)\r\n', ...
        '  5 -10 -10   -10   -20   -10   -5  3  0\r\n', ...
        'TWRD (Blade root twist at zero collective in degrees)\r\n', ...
        '  13.6\r\n', ...
        'TWSTGD(ISEG)\r\n', ...
        '  8*0\r\n', ...
        'ANHD(ISEG)\r\n', ...
        ' 8*%2.1f\r\n', ... 
        'THIKND(ISEG)\r\n', ...
        ' 8*0.1200\r\n', ...
        'KFLAP(ISEG)\r\n', ...
        ' 8*0\r\n', ...
        'FLAPND(ISEG)\r\n', ...
        ' 8*0.0\r\n', ...
        'FLHNGE(ISEG)\r\n', ...
        ' 8*0.0\r\n', ...
        'FLDEFL(ISEG)\r\n', ...
        ' 8*0.0\r\n', ...
        'NCAM\r\n', ...
        ' 0\r\n', ...
        'NCHORD  NSPAN  ICOS\r\n', ...
        '  1      -72    0\r\n'], anhd);
        fclose(fileID);
    end
end

%make all rw files
rwfiletype = "rw";
%again, ztilt (blade offset angle) is what we changed in this study. Feel free to change
%this to whatever you'd like
ztilt = 0;
for o = 1:y
    for z = 1:x
        rwfilename = sprintf('%s%d%d%s.inp', fileprefix, o, z, rwfiletype);
        tempfile = fopen(rwfilename, 'w');
        switch z
            case 1
                ztilt = 0;
            case 2
                ztilt = 15;
            case 3
                ztilt = 30;
            case 4
                ztilt = 45;
            case 5
                ztilt = 60;
            case 6
                ztilt = 75;
            case 7
                ztilt = 90;
            case 8
                ztilt = 105;
            case 9
                ztilt = 120;
            case 10
                ztilt = 135;
            case 11
                ztilt = 150;
            case 12
                ztilt = 165;
            case 13
                ztilt = 180;
        end
    fprintf(tempfile, ['baserw.inp: Baseline Rotor/Wake Input File - 700 fps\r\n', ...
        'NBLADE  OMEGA\r\n', ...
        '  1      420.0\r\n', ...
        'IROTAT      XROTOR           X,Y,Z tilt     ITILT\r\n', ...
        '  1     0.0   0.0  0.0     0.0  0.0  0.0      1\r\n', ...
        'ICOLL   COLL     CT\r\n', ...
        '  0      0     .004\r\n', ...
        'ITRIM    A1W    B1W    A1S    B1S\r\n', ...
        '  0      0.0    0.0    0.0    0.0\r\n', ...
        'NOWAKE   ICNVCT   NWAKES   NPWAKE   IFAR   MBCVE\r\n', ...
        '  0        2        1       10       0      0\r\n', ...
        'KSCHEME  KPC\r\n', ...
        '   0      0\r\n', ...
        'NCUT   AOVLAP   ISKEW   IUNS\r\n', ...
        '  1       -1       1      1\r\n', ...
        'NZONE   (NVORT(I), I=1,NZONE)\r\n', ...
        '  3       30  30  2 \r\n', ...
        '(NPTFW(I), I=1,NZONE)\r\n', ...
        ' 48  48  96\r\n', ...
        '(CORLIM(NV,IZONE,1), NV=1,NVORT(IZONE) IZONE=1 (Min core radii)\r\n', ...
        ' 15*0.5  15*0.01\r\n', ...
        '(CORLIM(NV,IZONE,2), NV=1,NVORT(IZONE) IZONE=1 (Max core radii)\r\n', ...
        ' 1.0\r\n', ...
        '(CORLIM(NV,IZONE,1), NV=1,NVORT(IZONE) IZONE=2 (Min core radii)\r\n', ...
        ' 0.01\r\n', ...
        '(CORLIM(NV,IZONE,2), NV=1,NVORT(IZONE) IZONE=2 (Max core radii)\r\n', ...
        ' 1.0\r\n', ...
        '(CORLIM(NV,IZONE,1), NV=1,NVORT(IZONE) IZONE=3 (Min core radii)\r\n', ...
        ' 0.5  0.1\r\n', ...
        '(CORLIM(NV,IZONE,2), NV=1,NVORT(IZONE) IZONE=3 (Max core radii)\r\n', ...
        ' 0.5  0.1\r\n', ...
        '(CUTLIM(NV,IZONE,1), NV=1,NVORT(IZONE) IZONE=1 (Min cutoff distances)\r\n', ...
        ' 15*0.5  15*0.01\r\n', ...
        '(CUTLIM(NV,IZONE,2), NV=1,NVORT(IZONE)  IZONE=1 (Max cutoff distances)\r\n', ...
        ' 1.0\r\n', ...
        '(CUTLIM(NV,IZONE,1), NV=1,NVORT (IZONE) IZONE=2 (Min cutoff distances)\r\n', ...
        ' 0.01\r\n', ...
        '(CUTLIM(NV,IZONE,2), NV=1,NVORT(IZONE) IZONE=2 (Max cutoff distances)\r\n', ...
        ' 1.0\r\n', ...
        '(CUTLIM(NV, IZONE,1), NV=1,NVORT(IZONE) IZONE=3 (Min cutoff distances)\r\n', ...
        ' 0.5  0.1\r\n', ...
        '(CUTLIM(NV,IZONE,2), NV=1,NVORT(IZONE) IZONE=3 (Max cutoff distances)\r\n', ...
        ' 0.5  0.1\r\n', ...
        'IDYNM\r\n', ...
        '  1\r\n', ...
        'SRAD   SHGHT\r\n', ...
        '0.0    0.0\r\n', ...
        'NHHI (Higher harmonic cyclic pitch input flag)\r\n', ...
        '  0\r\n'], ztilt);
    fclose(tempfile);
    end
end

%make all rc files
for o = 1:x
    for z = 1:y
       rcfiletype = "rc";
       basefilename = sprintf('%s%d%d%s.inp', fileprefix, z, o, rcfiletype);
       %make correct bg/rw file to insert
       bgfilegetter = sprintf('%s%d%d%s.inp', fileprefix, z, o, bgfiletype);
       rwfilegetter = sprintf('%s%d%d%s.inp', fileprefix, z, o, rwfiletype);

       tempfile2 = fopen(basefilename,'w');
       fprintf(tempfile2, ['baserc.inp: Acoustics prediction\r\n', ...
        'KSIM\r\n', ...
        ' 0\r\n', ...
        'NROTOR\r\n', ...
        '  1\r\n', ...
        'PATHNAME\r\n', ...
        '../\r\n', ...
        'INPUT FILENAMESFront right rotor\r\n', ...
        ' baserw.inp\r\n', ...
        ' %s\r\n', ...
        ' basebd.inp\r\n', ...
        ' 0012air.inp\r\n', ...
        ' None\r\n', ...
        'INPUT FILENAMESFront right rotor\r\n', ...
        ' %s\r\n', ...
        ' %s\r\n', ...
        ' basebd.inp\r\n', ...
        ' 0012air.inp\r\n', ...
        ' none\r\n', ...
        'SSPD     RHO\r\n', ...
        '1116.    0.002378\r\n', ...
        'SFRAME\r\n', ...
        '  1\r\n', ...
        ' U   V   W      P   Q   R\r\n', ...
        '0.0 0.0 0.0    0.0 0.0 0.0\r\n', ...
        'NPSI    NREV    CONVG1    CONVG2   CONVG3   MREV\r\n', ...
        ' 24      3     -1.0     -1.0      -1.0      0\r\n', ...
        'IRST  IFREE  IGPR\r\n', ...
        ' 0      0      0\r\n', ...
        'IOUT   NRS   (ROUT(I),I=1,NRS)\r\n', ...
        '  4     10  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  0.95  0.99\r\n', ...
        'NPRINT   IBLPLT   (IFILPLT(I),I=1,4) \r\n', ...
        '  0        0        3  3  3  3\r\n', ...
        'KOPT\r\n', ...
        '  0\r\n', ...
        'ISCAN (Scan plane flag)\r\n', ...
        ' 1\r\n', ...
        'ISTRSS (Stress calculation flag)\r\n', ...
        '  0\r\n', ...
        'IFV    IQUIK1\r\n', ...
        ' 0       1\r\n', ...
        'ISURF\r\n', ...
        '  0 \r\n', ...
        'ISHIP\r\n', ...
        '  0\r\n', ...
        'IRECON   NOISE\r\n', ...
        '  0        4\r\n', ...
        'ACOUSTICS_CODE\r\n', ...
        '  1\r\n', ...
        'NLS\r\n', ...
        ' 0\r\n'], bgfilegetter, rwfilegetter, bgfilegetter);
        fclose(tempfile2);
    end
end
